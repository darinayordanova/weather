{"version":3,"sources":["Components/LeftContainer/LeftContainer.js","Components/RightContainer/RightContainer.js","Components/Search/Search.js","Components/City/City.js","Components/WeatherDetailed/WeatherDetailed.js","Components/WeatherNow/WeatherNow.js","Components/WeatherAccordeon/WeatherAccordeon.js","redux/Weather/Weather.types.js","Services/WeatherService.js","redux/Weather/Weather.actions.js","App.js","reportWebVitals.js","redux/Weather/Weather.reducer.js","redux/rootReducer.js","redux/createStore.js","index.js"],"names":["Container","styled","div","LeftContainer","children","RightContainer","SearchContainer","SearchField","input","SearchBtn","button","Search","value","onChange","onSubmit","onKeyDown","props","onClick","Title","h1","CityTitle","mapState","weather","Weather","Img","src","TitleRow","p","Celsius","sup","PlainText","PlainTextDescription","SingleCont","WeatherDetailed","detailsArray","useSelector","map","item","time","icon","temperature","metricUnit","feelsLike","wind","humidity","ContainerTodayImg","h2","Now","Degr","WeatherDetails","WeatherNow","now","forecast","Object","values","detailed","slice","Row","ContainerWidth","align","SimpleCont","InnerCont","SimpleText","SimpleTextWeather","Date","Arrow","rotate","DetailsContainer","WeatherAccordeon","forecastArray","useState","currentlyOpen","setCurrentlyOpen","weekDay","date","desc","minTemp","maxTemp","types","CHANGE_WEATHER","CHANGE_METRIC","baseURL","APIKey","additionalSettings","getWeatherByCityName","name","metric","axios","get","getWeatherByGeo","lat","lon","getWeatherByCity","dispatch","a","api","data","console","log","type","payload","manageData","message","obj","finalObject","cityName","city","country","moment","list","dt_txt","format","Math","round","main","temp","feels_like","description","speed","newobj","descriptions","icons","simleItem","localArr","split","localDescriptions","localIcons","push","temp_max","temp_min","entries","val","reduce","max","apply","arr2","keys","forEach","k","MainContainer","GlobalStyle","createGlobalStyle","Units","Unit","App","search","setSearch","useDispatch","getPosition","pos","coords","latitude","longitude","SearchCity","ChangeMetric","unit","useEffect","navigator","geolocation","getCurrentPosition","placeholder","e","target","key","style","color","fontWeight","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","WeatherReducer","state","action","combineReducers","middlewares","thunk","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6387f087.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  min-height: 100vh;\r\n  padding: 30px;\r\n  box-sizing: border-box;\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 50%;\r\n  background-image: url(./BG-clouds.png);\r\n  position: fixed;\r\n  @media screen and (max-width: 1300px) {\r\n    width: 40%;\r\n  }\r\n  @media screen and (max-width: 1030px) {\r\n    width: 100%;\r\n    display: block;\r\n    position: relative;\r\n  min-height: auto;\r\n  padding: 30px 15px\r\n\r\n  }\r\n`;\r\nexport default function LeftContainer({ children }) {\r\n  return <Container>{children}</Container>;\r\n}","import styled, { css } from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  min-height: 100vh;\r\n  padding: 30px;\r\n  box-sizing: border-box;\r\n  width: 50%;\r\n  background: #E7E1E0;\r\n  position: absolute;\r\n  right: 0;\r\n  @media screen and (max-width: 1300px) {\r\n    width: 60%;\r\n  }\r\n  @media screen and (max-width: 1030px) {\r\n    width: 100%;\r\n    display: block;\r\n    position: relative;\r\n    padding: 15px\r\n  }\r\n`;\r\nexport default function RightContainer({ children }) {\r\n  return <Container>{children}</Container>;\r\n}","import styled from \"styled-components\";\r\n\r\nconst SearchContainer = styled.div`\r\n  border: none;\r\n  background: #e7e1e0;\r\n  border-radius: 40px;\r\n  padding: 5px 10px;\r\n  display: flex;\r\n  width: min-content;\r\n  @media screen and (max-width: 1030px) {\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nconst SearchField = styled.input`\r\n  border: none;\r\n  background: #e7e1e0;\r\n  width: 200px;\r\n  height: 24px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  @media screen and (max-width: 1030px) {\r\n    width: calc(100% - 30px);\r\n    \r\n  }\r\n`;\r\n\r\nconst SearchBtn = styled.button`\r\n  border: none;\r\n  background: url(./search.svg);\r\n  width: 24px;\r\n  height: 24px;\r\n  cursor: pointer;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport default function Search({\r\n  value,\r\n  onChange,\r\n  onSubmit,\r\n  onKeyDown,\r\n  ...props\r\n}) {\r\n  return (\r\n    <SearchContainer>\r\n      <SearchField\r\n        value={value}\r\n        onKeyDown={onKeyDown}\r\n        onChange={onChange}\r\n        {...props}\r\n      ></SearchField>\r\n      <SearchBtn onClick={() => onSubmit()}></SearchBtn>\r\n    </SearchContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst Title = styled.h1`\r\n  color: #E7E1E0;\r\n  position: absolute;\r\n  bottom: 30px;\r\n  margin: 0;\r\n  font-size: 72px;\r\n  font-weight: 400;\r\n  @media screen and (max-width: 1030px) {\r\n    bottom: 0;\r\n    position: relative;\r\n    margin-top: 15px;\r\n  font-size: 48px;\r\n\r\n  }\r\n`;\r\n\r\nexport default function CityTitle({ children }) {\r\n  return <Title>{children}</Title>;\r\n}","import React, { useEffect, useState, memo, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nconst mapState = ({ Weather }) => {\r\n  return {\r\n    weather: Weather,\r\n  };\r\n};\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: center;\r\n  @media screen and (max-width: 660px) {\r\n    overflow-x: auto;\r\n    justify-content: start;\r\n  }\r\n`;\r\n\r\nconst Img = styled.div`\r\n  width: 35px;\r\n  height: 35px;\r\n  background-size: contain;\r\n  margin: 0 auto;\r\n  background-image: url(http://openweathermap.org/img/wn/${(props) =>\r\n    props.src}@2x.png);\r\n`;\r\nconst TitleRow = styled.p`\r\n  font-size: 14px;\r\n  margin: 0;\r\n  font-weight: 400;\r\n  margin: 5px 0;\r\n\r\n  text-align: right;\r\n  color: #818189;\r\n  line-height: 20px;\r\n`;\r\n\r\nconst Celsius = styled.sup`\r\n  font-size: 14px;\r\n  margin: 10px 0;\r\n  font-weight: 400;\r\n  color: #48484a;\r\n`;\r\n\r\nconst PlainText = styled.p`\r\n  font-size: 18px;\r\n  margin: 5px 0;\r\n  font-weight: 400;\r\n  text-align: center;\r\n  color: #48484a;\r\n`;\r\nconst PlainTextDescription = styled.p`\r\n  max-width: 65px;\r\n  font-size: 14px;\r\n  margin: 0;\r\n  font-weight: 400;\r\n  text-align: center;\r\n  min-height: 32px;\r\n  color: #48484a;\r\n  \r\n`;\r\nconst SingleCont = styled.div`\r\n  border-right: 1px solid #48484a;\r\n  padding: 0 9px;\r\n`;\r\n\r\nexport default function WeatherDetailed({ detailsArray }) {\r\n  const { weather } = useSelector(mapState);\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <TitleRow>Feels like</TitleRow>\r\n        <TitleRow>Wind</TitleRow>\r\n        <TitleRow>Humidity</TitleRow>\r\n      </div>\r\n      {detailsArray?.map((item) => {\r\n        return (\r\n          <SingleCont>\r\n            <PlainText>{item?.time}</PlainText>\r\n            <Img src={item?.icon} />\r\n            <PlainTextDescription>{item?.weather}</PlainTextDescription>\r\n            <PlainText>\r\n              {item?.temperature}\r\n              <Celsius>{weather.metricUnit=='metric'? '°C' : '°F'}</Celsius>\r\n            </PlainText>\r\n            <PlainText>\r\n              {item?.feelsLike}\r\n              <Celsius>{weather.metricUnit=='metric'? '°C' : '°F'}</Celsius>\r\n            </PlainText>\r\n            <PlainText>{item?.wind}m/s</PlainText>\r\n            <PlainText>{item?.humidity}%</PlainText>\r\n          </SingleCont>\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n}","import React, { useEffect, useState, memo, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport WeatherDetailed from \"../WeatherDetailed/WeatherDetailed\";\r\nconst mapState = ({ Weather }) => {\r\n  return {\r\n    weather: Weather,\r\n  };\r\n};\r\nconst Container = styled.div`\r\n  display: flex;\r\n  margin-bottom: 70px;\r\n  justify-content: space-between;\r\n  @media screen and (max-width: 1300px) {\r\n    display: block;\r\n    text-align: center;\r\n  }\r\n`;\r\nconst ContainerTodayImg = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\nconst Img = styled.div`\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: -15px 0 -15px -15px;\r\n  background-size: contain;\r\n  background-image: url(http://openweathermap.org/img/wn/${(props) =>\r\n    props.src}@2x.png);\r\n`;\r\nconst Title = styled.h2`\r\n  font-size: 42px;\r\n  margin: 0;\r\n  font-weight: 400;\r\n`;\r\nconst Celsius = styled.sup`\r\n  font-size: 32px;\r\n  margin: 10px 0;\r\n  font-weight: 400;\r\n  color: #ec6e4c;\r\n`;\r\nconst Now = styled.div`\r\n  @media screen and (max-width: 1300px) {\r\n    margin: 0 auto;\r\n    display: inline-block;\r\n    margin-bottom: 30px\r\n  }\r\n`;\r\nconst Degr = styled.h2`\r\n  font-size: 62px;\r\n  margin: 0;\r\n  font-weight: 400;\r\n  color: #ec6e4c;\r\n`;\r\n\r\nconst WeatherDetails = styled.p`\r\n  font-size: 24px;\r\n  margin: 0;\r\n  font-weight: 400;\r\n  max-width: 150px;\r\n  @media screen and (max-width: 1300px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nexport default function WeatherNow() {\r\n  const { weather } = useSelector(mapState);\r\n\r\n  return (\r\n    <Container>\r\n      <Now>\r\n        <Title>Now</Title>\r\n        <ContainerTodayImg>\r\n          <Img src={weather?.now?.icon} />\r\n          <Degr>\r\n            {weather?.now?.temperature}\r\n            <Celsius>{weather.metricUnit == \"metric\" ? \"°C\" : \"°F\"}</Celsius>\r\n          </Degr>\r\n        </ContainerTodayImg>\r\n        <WeatherDetails>{weather?.now?.weather}</WeatherDetails>\r\n      </Now>\r\n      <WeatherDetailed\r\n        detailsArray={\r\n          weather?.forecast\r\n            ? [\r\n                ...Object.values(weather?.forecast)[0]?.detailed,\r\n                ...Object.values(weather?.forecast)[1]?.detailed,\r\n              ].slice(1, 7)\r\n            : null\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState} from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport WeatherDetailed from \"../WeatherDetailed/WeatherDetailed\";\r\nimport { useSelector } from \"react-redux\";\r\nconst mapState = ({ Weather }) => {\r\n  return {\r\n    weather: Weather,\r\n  };\r\n};\r\n\r\nconst Row = styled.div`\r\n  border-bottom: 1px solid #48484a;\r\n  padding: 0px 15px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nconst ContainerWidth = styled.div`\r\n  width: calc(100% / 3);\r\n  text-align: ${(props) => (props.align ? props.align : \"left\")};\r\n`;\r\nconst SimpleCont = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: calc(100% - 60px);\r\n`;\r\n\r\nconst InnerCont = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst SimpleText = styled.p`\r\n  color: #48484a;\r\n  font-size: 18px;\r\n  margin: 0;\r\n`;\r\nconst SimpleTextWeather = styled.p`\r\n  color: #48484a;\r\n  font-size: 18px;\r\n  margin: 0;\r\n  @media screen and (max-width: 400px) {\r\n    display: none\r\n  }\r\n`;\r\n\r\nconst Date = styled.p`\r\n  color: #48484a;\r\n  font-size: 14px;\r\n  margin: 0;\r\n`;\r\n\r\nconst Img = styled.div`\r\n  width: 60px;\r\n  height: 60px;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-image: url(http://openweathermap.org/img/wn/${(props) =>\r\n    props.src}@2x.png);\r\n`;\r\n\r\nconst Arrow = styled.div`\r\n  width: 20px;\r\n  background-position: center;\r\n  height: 20px;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  cursor: pointer;\r\n  background-image: url(./arrow.svg);\r\n  transform: rotateZ(${(props) => (props.rotate ? \"180deg\" : \"0\")});\r\n`;\r\n\r\nconst DetailsContainer = styled.div`\r\n  padding: 15px;\r\n`;\r\n\r\nconst Celsius = styled.sup`\r\n  font-size: 14px;\r\n  margin: 10px 0;\r\n  font-weight: 400;\r\n  color: #48484a\r\n`;\r\nexport default function WeatherAccordeon({ forecastArray }) {\r\n  const { weather } = useSelector(mapState);\r\n  const [currentlyOpen, setCurrentlyOpen] = useState();\r\n  return (\r\n    <>\r\n      {forecastArray?.map((item) => {\r\n        return (\r\n          <>\r\n            <Row>\r\n              <SimpleCont>\r\n                <ContainerWidth>\r\n                  <SimpleText>{item?.weekDay}</SimpleText>\r\n                  <Date>{item?.date}</Date>\r\n                </ContainerWidth>\r\n                <ContainerWidth>\r\n                  <InnerCont>\r\n                    <Img src={item?.icon} />\r\n                    <SimpleTextWeather>{item?.desc}</SimpleTextWeather>\r\n                  </InnerCont>\r\n                </ContainerWidth>\r\n                <ContainerWidth align=\"right\">\r\n                  <SimpleText>{item?.minTemp}<Celsius>{weather.metricUnit=='metric'? '°C' : '°F'}</Celsius>/{item?.maxTemp}<Celsius>{weather.metricUnit=='metric'? '°C' : '°F'}</Celsius></SimpleText>\r\n                </ContainerWidth>\r\n              </SimpleCont>\r\n              <Arrow\r\n                onClick={() =>\r\n                  currentlyOpen == item.date\r\n                    ? setCurrentlyOpen(\"\")\r\n                    : setCurrentlyOpen(item?.date)\r\n                }\r\n                rotate={currentlyOpen == item.date}\r\n              />\r\n            </Row>\r\n\r\n            {currentlyOpen == item.date ? (\r\n              <DetailsContainer>\r\n                <WeatherDetailed detailsArray={item?.detailed} />\r\n              </DetailsContainer>\r\n            ) : null}\r\n          </>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n","const types = {\r\n  CHANGE_WEATHER: \"CHANGE_WEATHER\",\r\n  CHANGE_METRIC: \"CHANGE_METRIC\"\r\n};\r\n\r\nexport default types;\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = \"https://api.openweathermap.org/data/2.5/forecast?\";\r\nconst APIKey = \"&appid=db821b59a89db53c9bb01b36ff26eac3\";\r\nconst additionalSettings = \"&units=\";\r\n\r\nexport const getWeatherByCityName = (name, metric) =>\r\n  axios.get(baseURL + \"q=\" + name + additionalSettings + metric + APIKey);\r\n\r\nexport const getWeatherByGeo = (lat, lon, metric) =>\r\n  axios.get(baseURL + \"lat=\" + lat + \"&lon=\" + lon + additionalSettings + metric  + APIKey);","import types from \"./Weather.types\";\r\nimport moment from \"moment\";\r\nimport * as api from \"../../Services/WeatherService\";\r\n\r\nexport const changeWeather = (obj) => ({\r\n  type: types.CHANGE_WEATHER,\r\n  payload: obj,\r\n});\r\n\r\nexport const changeMetric = (item) => ({\r\n  type: types.CHANGE_METRIC,\r\n  payload: item,\r\n});\r\n\r\nexport const getWeatherByCity = (name, metric) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getWeatherByCityName(name, metric);\r\n    console.log(data);\r\n    dispatch({ type: types.CHANGE_WEATHER, payload: manageData(data) });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const getWeatherByGeolocation = (lat, lon, metric) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getWeatherByGeo(lat, lon, metric);\r\n    console.log(data);\r\n    dispatch({ type: types.CHANGE_WEATHER, payload: manageData(data) });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\n//Transform the JSON obj to an easier to use obj\r\nfunction manageData(obj) {\r\n  let finalObject = {\r\n    cityName: obj.city.name,\r\n    country: obj.city.country,\r\n    now: {\r\n      time: moment(obj.list[0].dt_txt).format(\"H:mm\"),\r\n      temperature: Math.round(obj.list[0].main.temp),\r\n      feelsLike: Math.round(obj.list[0].main.feels_like),\r\n      weather: obj.list[0].weather[0].description,\r\n      icon: obj.list[0].weather[0].icon,\r\n      humidity: obj.list[0].main.humidity,\r\n      wind: Math.round(obj.list[0].wind.speed),\r\n    },\r\n  };\r\n  var newobj = {};\r\n  var descriptions = {};\r\n  var icons = {};\r\n\r\n  obj.list.map((item) => {\r\n    let simleItem = {\r\n      //Get rid of unnecessary info\r\n      time: moment(item.dt_txt).format(\"H:mm\"),\r\n      temperature: Math.round(item.main.temp),\r\n      feelsLike: Math.round(item.main.feels_like),\r\n      weather: item.weather[0].description,\r\n      icon: item.weather[0].icon,\r\n      humidity: item.main.humidity,\r\n      wind: Math.round(item.wind.speed),\r\n    };\r\n\r\n    let localArr = newobj[item.dt_txt.split(\" \")[0]]?.detailed\r\n      ? newobj[item.dt_txt.split(\" \")[0]].detailed\r\n      : [];\r\n    let localDescriptions = descriptions[item.dt_txt.split(\" \")[0]]\r\n      ? descriptions[item.dt_txt.split(\" \")[0]]\r\n      : [];\r\n    let localIcons = icons[item.dt_txt.split(\" \")[0]]\r\n      ? icons[item.dt_txt.split(\" \")[0]]\r\n      : [];\r\n\r\n    localArr.push(simleItem);\r\n    localDescriptions.push(simleItem.weather);\r\n    localIcons.push(simleItem.icon);\r\n\r\n    newobj[item.dt_txt.split(\" \")[0]] = {\r\n      ...newobj[item.dt_txt.split(\" \")[0]],\r\n      date: moment(item.dt_txt).format(\"DD.MM\"),\r\n      weekDay: moment(item.dt_txt).format(\"dddd\"),\r\n      maxTemp:\r\n        newobj[item.dt_txt.split(\" \")[0]]?.maxTemp < item.main.temp_max ||\r\n        !newobj[item.dt_txt.split(\" \")[0]]?.maxTemp\r\n          ? Math.round(item.main.temp_max)\r\n          : newobj[item.dt_txt.split(\" \")[0]].maxTemp,\r\n      minTemp:\r\n        newobj[item.dt_txt.split(\" \")[0]]?.minTemp > item.main.temp_min ||\r\n        !newobj[item.dt_txt.split(\" \")[0]]?.minTemp\r\n          ? Math.round(item.main.temp_min)\r\n          : newobj[item.dt_txt.split(\" \")[0]].minTemp,\r\n      detailed: localArr,\r\n    };\r\n\r\n    descriptions[item.dt_txt.split(\" \")[0]] = localDescriptions;\r\n\r\n    icons[item.dt_txt.split(\" \")[0]] = localIcons;\r\n  });\r\n\r\n  Object.entries(descriptions).map((val) => {\r\n    var map = val[1].reduce(function (map, item) {\r\n      if (!(item in map)) map[item] = 0;\r\n      return map[item]++, map;\r\n    }, {});\r\n    var max = Math.max.apply(null, Object.values(map)),\r\n      arr2 = [];\r\n    Object.keys(map).forEach(function (k) {\r\n      if (map[k] === max) arr2.push(k);\r\n    });\r\n    newobj[val[0]] = {\r\n      ...newobj[val[0]],\r\n      desc: arr2[0],\r\n    };\r\n  });\r\n  Object.entries(icons).map((val) => {\r\n    var map = val[1].reduce(function (map, item) {\r\n      if (!(item in map)) map[item] = 0;\r\n      return map[item]++, map;\r\n    }, {});\r\n    var max = Math.max.apply(null, Object.values(map)),\r\n      arr2 = [];\r\n    Object.keys(map).forEach(function (k) {\r\n      if (map[k] === max) arr2.push(k);\r\n    });\r\n    newobj[val[0]] = {\r\n      ...newobj[val[0]],\r\n      icon: arr2[0],\r\n    };\r\n  });\r\n\r\n  finalObject = { ...finalObject, forecast: newobj };\r\n  return finalObject;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport {\r\n  LeftContainer,\r\n  RightContainer,\r\n  Search,\r\n  City,\r\n  WeatherNow,\r\n  WeatherAccordeon,\r\n} from \"./Components\";\r\nimport {\r\n  getWeatherByCity,\r\n  getWeatherByGeolocation,\r\n  changeMetric,\r\n} from \"./redux/Weather/Weather.actions\";\r\n\r\nconst MainContainer = styled.div`\r\n  display: flex;\r\n  @media screen and (max-width: 1030px) {\r\n    display: block;\r\n  }\r\n`;\r\nconst GlobalStyle = createGlobalStyle`\r\n  *{\r\n    font-family: 'Raleway', sans-serif;\r\n    color: #48484A;\r\n  }\r\n  body::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  @media screen and (max-width: 360px) {\r\n    display: block;\r\n  }\r\n`;\r\nconst Units = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  color: #e7e1e0;\r\n  @media screen and (max-width: 360px) {\r\n    margin-top: 15px\r\n  }\r\n`;\r\nconst Unit = styled.button`\r\n  background: none;\r\n  border: none;\r\n  color: #e7e1e0;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n`;\r\nconst mapState = ({ Weather }) => {\r\n  return {\r\n    weather: Weather,\r\n  };\r\n};\r\nfunction App() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const { weather } = useSelector(mapState);\r\n  useEffect(() => {\r\n    dispatch(getWeatherByCity(\"London\", weather.metricUnit));\r\n    navigator.geolocation?.getCurrentPosition(getPosition);\r\n  }, []);\r\n  function getPosition(pos) {\r\n    dispatch(\r\n      getWeatherByGeolocation(\r\n        pos.coords.latitude,\r\n        pos.coords.longitude,\r\n        weather.metricUnit\r\n      )\r\n    );\r\n  }\r\n  function SearchCity() {\r\n    dispatch(getWeatherByCity(search, weather.metricUnit));\r\n    setSearch(\"\");\r\n  }\r\n\r\n  function ChangeMetric(unit) {\r\n    dispatch(changeMetric(unit));\r\n    dispatch(getWeatherByCity(weather.cityName, unit));\r\n  }\r\n  return (\r\n    <MainContainer>\r\n      <GlobalStyle />\r\n      <LeftContainer>\r\n        <Row>\r\n          <Search\r\n            placeholder=\"Search city\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            onSubmit={SearchCity}\r\n            onKeyDown={(e) => (e.key === \"Enter\" ? SearchCity() : null)}\r\n          />\r\n          <Units>\r\n            <Unit\r\n              style={\r\n                weather.metricUnit == \"metric\"\r\n                  ? {\r\n                      color: \"#ec6e4c\",\r\n                      fontWeight: \"700\",\r\n                    }\r\n                  : {}\r\n              }\r\n              onClick={(e) => {\r\n                if (weather.metricUnit !== \"metric\") {\r\n                  ChangeMetric(\"metric\");\r\n                }\r\n              }}\r\n            >\r\n              °C\r\n            </Unit>\r\n            /\r\n            <Unit\r\n              style={\r\n                weather.metricUnit == \"imperial\"\r\n                  ? {\r\n                      color: \"#ec6e4c\",\r\n                      fontWeight: \"700\",\r\n                    }\r\n                  : {}\r\n              }\r\n              onClick={(e) => {\r\n                if (weather.metricUnit !== \"imperial\") {\r\n                  ChangeMetric(\"imperial\");\r\n                }\r\n              }}\r\n            >\r\n              °F\r\n            </Unit>\r\n          </Units>\r\n        </Row>\r\n        <City>\r\n          {weather?.cityName}, {weather?.country}\r\n        </City>\r\n      </LeftContainer>\r\n      <RightContainer>\r\n        <WeatherNow />\r\n        <WeatherAccordeon\r\n          forecastArray={\r\n            weather?.forecast\r\n              ? Object.values(weather?.forecast)?.slice(\r\n                  1,\r\n                  Object.values(weather?.forecast)?.length\r\n                )\r\n              : null\r\n          }\r\n        />\r\n      </RightContainer>\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import types from \"./Weather.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  cityName: \"London\",\r\n  metricUnit: 'metric',\r\n  weather: {},\r\n};\r\n\r\nconst WeatherReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case types.CHANGE_WEATHER:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n      case types.CHANGE_METRIC:\r\n      return {\r\n        ...state,\r\n        metricUnit: action.payload,\r\n\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default WeatherReducer;\r\n","import { combineReducers } from 'redux';\r\nimport Weather from './Weather/Weather.reducer';\r\n\r\n// Thats unnecessary for now, but if we want to add more features in the future\r\nexport default combineReducers({\r\n    Weather: Weather\r\n})","import { createStore, applyMiddleware } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nexport const middlewares = [thunk, logger];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/createStore\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}